<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Title</title>
    <script src="lib/pako.js"></script>
    <script src="lib/jquery.min.js"></script>
</head>
<body>

<div>
    Ltc price:<span id="nowPrice">0</span>
    <br>
    counts:<span id="nowAmount">0</span>
    <br>
    rate:<span id="zhangfu">0</span>
</div>

<br/>

<div>
    Etch price:<span id="nowPrice1">0</span>
    <br>
    count:<span id="nowAmount1">0</span>
    <br>
    rate:<span id="zhangfu1">0</span>
</div>

<br/>
<div>
    Btc price:<span id="nowPrice2">0</span>
    <br>
    count:<span id="nowAmount2">0</span>
    <br>
    rate:<span id="zhangfu2">0</span>
</div>


<script>
    var webSocket = new WebSocket("wss://api.huobi.com/ws");
    webSocket.binaryType = "arraybuffer";
	var symbol = 'ltccny';
    webSocket.onopen = function(event){
        console.log(("webSocket connect at time: "+new Date()));
		//market.btccny.detail
		 //webSocket.send(JSON.stringify({'sub': 'market.' + symbol + '.depth.percent10','id': 'depth ' + new Date()}));
        webSocket.send(JSON.stringify({'sub': 'market.ltccny.kline.1day','id': 'depth ' + new Date()}));
		
    }
    webSocket.onmessage = function(event){
        var raw_data = event.data;
        window.raw_data = raw_data;
        var ua = new Uint8Array(raw_data);
        var json = pako.inflate(ua,{to:"string"});
        var data = JSON.parse(json);
        if(data["ping"]){
            webSocket.send(JSON.stringify({"pong":data["ping"]}));
        }
        else{
            console.log(data);

            if(data.ch){
                var tick = data.tick;
                $("#nowPrice").html(data.tick.close);
                $("#nowAmount").html(data.tick.amount+tick.count);
                $("#zhangfu").html((Math.floor((tick.close-tick.open)/tick.open*100*100)/100)+"%")
            }
        }
    }

    webSocket.onclose = function(){
        console.log("webSocket connect is closed");
        console.log(arguments);
    }

    webSocket.onerror = function(){
        console.log("error");
        console.log(arguments);
    }

	
	
	var WebSocket1 = new WebSocket("wss://be.huobi.com/ws");
    WebSocket1.binaryType = "arraybuffer";
	var symbol = 'ethcny';
    WebSocket1.onopen = function(event){
        console.log(("WebSocket1 connect at time: "+new Date()));
		//market.btccny.detail
        WebSocket1.send(JSON.stringify({'sub': 'market.'+ symbol +'.kline.1day','id': 'depth ' + new Date()}));
		
    }
    WebSocket1.onmessage = function(event){
        var raw_data = event.data;
        window.raw_data = raw_data;
        var ua = new Uint8Array(raw_data);
        var json = pako.inflate(ua,{to:"string"});
        var data = JSON.parse(json);
        if(data["ping"]){
            WebSocket1.send(JSON.stringify({"pong":data["ping"]}));
        }
        else{
            console.log(data);

            if(data.ch){
                var tick = data.tick;
                $("#nowPrice1").html(data.tick.close);
                $("#nowAmount1").html(data.tick.amount+tick.count);
                $("#zhangfu1").html((Math.floor((tick.close-tick.open)/tick.open*100*100)/100)+"%")
            }
        }
    }

    WebSocket1.onclose = function(){
        console.log("WebSocket1 connect is closed");
        console.log(arguments);
    }

    WebSocket1.onerror = function(){
        console.log("error");
        console.log(arguments);
    }
	
	
	var webSocket2 = new WebSocket("wss://api.huobi.com/ws");
    webSocket2.binaryType = "arraybuffer";
	var symbol2 = 'btccny';
    webSocket2.onopen = function(event){
        console.log(("webSocket connect at time: "+new Date()));
		//market.btccny.detail
		 //webSocket.send(JSON.stringify({'sub': 'market.' + symbol + '.depth.percent10','id': 'depth ' + new Date()}));
        webSocket2.send(JSON.stringify({'sub': 'market.btccny.kline.1day','id': 'depth ' + new Date()}));
		
    }
    webSocket2.onmessage = function(event){
        var raw_data = event.data;
        window.raw_data = raw_data;
        var ua = new Uint8Array(raw_data);
        var json = pako.inflate(ua,{to:"string"});
        var data = JSON.parse(json);
        if(data["ping"]){
            webSocket2.send(JSON.stringify({"pong":data["ping"]}));
        }
        else{
            console.log(data);

            if(data.ch){
                var tick = data.tick;
                $("#nowPrice2").html(data.tick.close);
                $("#nowAmount2").html(data.tick.amount+tick.count);
                $("#zhangfu2").html((Math.floor((tick.close-tick.open)/tick.open*100*100)/100)+"%")
            }
        }
    }

    webSocket2.onclose = function(){
        console.log("webSocket connect is closed");
        console.log(arguments);
    }

    webSocket2.onerror = function(){
        console.log("error");
        console.log(arguments);
    }
	
	
</script>


</body>
</html>
